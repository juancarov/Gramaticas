Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> lineas
Rule 1     lineas -> lineas linea
Rule 2     lineas -> linea
Rule 3     linea -> cadena SALTO_LINEA
Rule 4     linea -> error SALTO_LINEA
Rule 5     cadena -> A B B
Rule 6     cadena -> A cadena B

Terminals, with rules where they appear

A                    : 5 6
B                    : 5 5 6
SALTO_LINEA          : 3 4
error                : 4

Nonterminals, with rules where they appear

cadena               : 3 6
linea                : 1 2
lineas               : 1 0

Parsing method: LALR

state 0

    (0) S' -> . lineas
    (1) lineas -> . lineas linea
    (2) lineas -> . linea
    (3) linea -> . cadena SALTO_LINEA
    (4) linea -> . error SALTO_LINEA
    (5) cadena -> . A B B
    (6) cadena -> . A cadena B

    error           shift and go to state 4
    A               shift and go to state 5

    lineas                         shift and go to state 1
    linea                          shift and go to state 2
    cadena                         shift and go to state 3

state 1

    (0) S' -> lineas .
    (1) lineas -> lineas . linea
    (3) linea -> . cadena SALTO_LINEA
    (4) linea -> . error SALTO_LINEA
    (5) cadena -> . A B B
    (6) cadena -> . A cadena B

    error           shift and go to state 4
    A               shift and go to state 5

    linea                          shift and go to state 6
    cadena                         shift and go to state 3

state 2

    (2) lineas -> linea .

    error           reduce using rule 2 (lineas -> linea .)
    A               reduce using rule 2 (lineas -> linea .)
    $end            reduce using rule 2 (lineas -> linea .)


state 3

    (3) linea -> cadena . SALTO_LINEA

    SALTO_LINEA     shift and go to state 7


state 4

    (4) linea -> error . SALTO_LINEA

    SALTO_LINEA     shift and go to state 8


state 5

    (5) cadena -> A . B B
    (6) cadena -> A . cadena B
    (5) cadena -> . A B B
    (6) cadena -> . A cadena B

    B               shift and go to state 9
    A               shift and go to state 5

    cadena                         shift and go to state 10

state 6

    (1) lineas -> lineas linea .

    error           reduce using rule 1 (lineas -> lineas linea .)
    A               reduce using rule 1 (lineas -> lineas linea .)
    $end            reduce using rule 1 (lineas -> lineas linea .)


state 7

    (3) linea -> cadena SALTO_LINEA .

    error           reduce using rule 3 (linea -> cadena SALTO_LINEA .)
    A               reduce using rule 3 (linea -> cadena SALTO_LINEA .)
    $end            reduce using rule 3 (linea -> cadena SALTO_LINEA .)


state 8

    (4) linea -> error SALTO_LINEA .

    error           reduce using rule 4 (linea -> error SALTO_LINEA .)
    A               reduce using rule 4 (linea -> error SALTO_LINEA .)
    $end            reduce using rule 4 (linea -> error SALTO_LINEA .)


state 9

    (5) cadena -> A B . B

    B               shift and go to state 11


state 10

    (6) cadena -> A cadena . B

    B               shift and go to state 12


state 11

    (5) cadena -> A B B .

    SALTO_LINEA     reduce using rule 5 (cadena -> A B B .)
    B               reduce using rule 5 (cadena -> A B B .)


state 12

    (6) cadena -> A cadena B .

    SALTO_LINEA     reduce using rule 6 (cadena -> A cadena B .)
    B               reduce using rule 6 (cadena -> A cadena B .)

