Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> lineas
Rule 1     lineas -> lineas linea
Rule 2     lineas -> linea
Rule 3     linea -> AB SALTO_LINEA
Rule 4     linea -> ABB SALTO_LINEA
Rule 5     linea -> error SALTO_LINEA

Terminals, with rules where they appear

AB                   : 3
ABB                  : 4
SALTO_LINEA          : 3 4 5
error                : 5

Nonterminals, with rules where they appear

linea                : 1 2
lineas               : 1 0

Parsing method: LALR

state 0

    (0) S' -> . lineas
    (1) lineas -> . lineas linea
    (2) lineas -> . linea
    (3) linea -> . AB SALTO_LINEA
    (4) linea -> . ABB SALTO_LINEA
    (5) linea -> . error SALTO_LINEA

    AB              shift and go to state 3
    ABB             shift and go to state 4
    error           shift and go to state 5

    lineas                         shift and go to state 1
    linea                          shift and go to state 2

state 1

    (0) S' -> lineas .
    (1) lineas -> lineas . linea
    (3) linea -> . AB SALTO_LINEA
    (4) linea -> . ABB SALTO_LINEA
    (5) linea -> . error SALTO_LINEA

    AB              shift and go to state 3
    ABB             shift and go to state 4
    error           shift and go to state 5

    linea                          shift and go to state 6

state 2

    (2) lineas -> linea .

    AB              reduce using rule 2 (lineas -> linea .)
    ABB             reduce using rule 2 (lineas -> linea .)
    error           reduce using rule 2 (lineas -> linea .)
    $end            reduce using rule 2 (lineas -> linea .)


state 3

    (3) linea -> AB . SALTO_LINEA

    SALTO_LINEA     shift and go to state 7


state 4

    (4) linea -> ABB . SALTO_LINEA

    SALTO_LINEA     shift and go to state 8


state 5

    (5) linea -> error . SALTO_LINEA

    SALTO_LINEA     shift and go to state 9


state 6

    (1) lineas -> lineas linea .

    AB              reduce using rule 1 (lineas -> lineas linea .)
    ABB             reduce using rule 1 (lineas -> lineas linea .)
    error           reduce using rule 1 (lineas -> lineas linea .)
    $end            reduce using rule 1 (lineas -> lineas linea .)


state 7

    (3) linea -> AB SALTO_LINEA .

    AB              reduce using rule 3 (linea -> AB SALTO_LINEA .)
    ABB             reduce using rule 3 (linea -> AB SALTO_LINEA .)
    error           reduce using rule 3 (linea -> AB SALTO_LINEA .)
    $end            reduce using rule 3 (linea -> AB SALTO_LINEA .)


state 8

    (4) linea -> ABB SALTO_LINEA .

    AB              reduce using rule 4 (linea -> ABB SALTO_LINEA .)
    ABB             reduce using rule 4 (linea -> ABB SALTO_LINEA .)
    error           reduce using rule 4 (linea -> ABB SALTO_LINEA .)
    $end            reduce using rule 4 (linea -> ABB SALTO_LINEA .)


state 9

    (5) linea -> error SALTO_LINEA .

    AB              reduce using rule 5 (linea -> error SALTO_LINEA .)
    ABB             reduce using rule 5 (linea -> error SALTO_LINEA .)
    error           reduce using rule 5 (linea -> error SALTO_LINEA .)
    $end            reduce using rule 5 (linea -> error SALTO_LINEA .)

